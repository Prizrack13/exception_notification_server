.buttons
  = link_to 'Investigate', investigate_notification_path, data: {method: :put} if @notification.status.to_sym == :new
  = link_to 'Fix', fix_notification_path, data: {method: :put} if @notification.status.to_sym == :investigating
  = link_to 'Renew', renew_notification_path, data: {method: :put} if @notification.status.to_sym == :fixed
.graphic
  %h3 Last 3 month count:
  .graph{data: {values: @notification.similar_count_flot.to_json}}
.id
  %h3
    Id:
    .inline-value= @notification.id
.status
  %h3
    Status:
    .inline-value= @notification.status
.exception-hash
  %h3
    Exception hash:
    .inline-value= @notification.exception_hash
.exception-class
  %h3
    Exception class:
    .inline-value= @notification.exception_class
.exception-message
  %h3
    Exception message:
    .inline-value= @notification.exception_message
- if @notification.application.present?
  .environment
    %h3
      Application:
      .inline-value= @notification.application
- if @notification.env.present?
  .environment
    %h3
      Environment:
      .inline-value= @notification.env
- if @notification.server.present?
  .server
    %h3
      Server:
      .inline-value= @notification.server
- if @notification.process.present?
  .process
    %h3
      Process:
      .inline-value= @notification.process
- if @notification.rails_root.present?
  .rails-root
    %h3
      Rails root:
      .inline-value= @notification.rails_root
- if @notification.backtrace.present?
  .backtrace
    %h3 Backtrace
    = pretty_json @notification.backtrace
- if @notification.data.present?
  .data
    %h3 Data
    = pretty_json @notification.data
- if @notification.request.present?
  .request
    %h3 Request
    = pretty_json @notification.request
- if @notification.session.present?
  .session
    %h3 Session
    = pretty_json @notification.session
- if @notification.environment.present?
  .environment
    %h3 Environment
    = pretty_json @notification.environment
- if @notification.similar.to_a.present?
  %br
  = render partial: 'exception_notification_server/notifications/notifications', object: @notification.similar, as: :notifications, locals: {count: false, last_time: false, env: true}
%br
